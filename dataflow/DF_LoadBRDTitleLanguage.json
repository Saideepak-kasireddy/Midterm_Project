{
	"name": "DF_LoadBRDTitleLanguage",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Snowflake_DimLanguage",
						"type": "DatasetReference"
					},
					"name": "DimLanguage"
				},
				{
					"dataset": {
						"referenceName": "Snowflake_DimTitle",
						"type": "DatasetReference"
					},
					"name": "DimTitle"
				},
				{
					"dataset": {
						"referenceName": "Snowflake_TitleAkas",
						"type": "DatasetReference"
					},
					"name": "StageTitleAkas"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeBRDTitleLanguage",
						"type": "DatasetReference"
					},
					"name": "BrdTitleLanguage"
				}
			],
			"transformations": [
				{
					"name": "joiningTconsts"
				},
				{
					"name": "SelectingTitleSK"
				},
				{
					"name": "JoinLanguagecodes"
				},
				{
					"name": "SelectingLangSK"
				},
				{
					"name": "JoiningSKs"
				}
			],
			"scriptLines": [
				"source(output(",
				"          LANGUAGE_SK as decimal(20,0),",
				"          LANGUAGE_CODE as string,",
				"          JOB_ID as string,",
				"          CREATED_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimLanguage",
				"source(output(",
				"          TITLE_SK as decimal(20,0),",
				"          TCONST as string,",
				"          ORIGINAL_TITLE as string,",
				"          PRIMARY_TITLE as string,",
				"          IS_ADULT as string,",
				"          START_YEAR as string,",
				"          END_YEAR as string,",
				"          JOB_ID as string,",
				"          CREATED_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimTitle",
				"source(output(",
				"          TITLEID as string,",
				"          ORDERING as decimal(38,0),",
				"          TITLE as string,",
				"          REGION as string,",
				"          LANGUAGE as string,",
				"          TYPES as string,",
				"          ATTRIBUTES as string,",
				"          ISORIGINALTITLE as boolean,",
				"          JOB_ID as string,",
				"          CREATED_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> StageTitleAkas",
				"DimTitle, StageTitleAkas join(TCONST == TITLEID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joiningTconsts",
				"joiningTconsts select(mapColumn(",
				"          TITLE_SK",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectingTitleSK",
				"DimLanguage, DimTitle join(LANGUAGE_CODE == LANGUAGE,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinLanguagecodes",
				"JoinLanguagecodes select(mapColumn(",
				"          LANGUAGE_SK",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectingLangSK",
				"SelectingTitleSK, SelectingLangSK join(TITLE_SK == LANGUAGE_SK,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoiningSKs",
				"JoiningSKs sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> BrdTitleLanguage"
			]
		}
	}
}