{
	"name": "DF_LoadDimPersonnel",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Snowflake_CleanNameBasics",
						"type": "DatasetReference"
					},
					"name": "CleanStageNameBasics"
				},
				{
					"dataset": {
						"referenceName": "Snowflake_Dim_Personnel",
						"type": "DatasetReference"
					},
					"name": "DimPersonnelMaxID"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Snowflake_Dim_Personnel",
						"type": "DatasetReference"
					},
					"name": "sinkDimPersonnel"
				}
			],
			"transformations": [
				{
					"name": "DimpersonnelwithSK"
				},
				{
					"name": "SurrogateKey"
				},
				{
					"name": "AddingAuditColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Job_ID as string (\"10\")",
				"}",
				"source(output(",
				"          NCONST as string,",
				"          PRIMARYNAME as string,",
				"          BIRTHYEAR as string,",
				"          DEATHYEAR as string,",
				"          PRIMARYPROFESSION as string,",
				"          KNOWNFORTITLES as string,",
				"          JOB_ID as string,",
				"          CREATED_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> CleanStageNameBasics",
				"source(output(",
				"          PERSONNEL_SK as decimal(20,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: ' SELECT NVL(MAX(PERSONNEL_SK),0) AS PERSONNEL_SK FROM DAMG_SCHEMA.DIM_PERSONNEL',",
				"     format: 'query') ~> DimPersonnelMaxID",
				"CleanStageNameBasics, DimPersonnelMaxID join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> DimpersonnelwithSK",
				"DimpersonnelwithSK keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> SurrogateKey",
				"SurrogateKey derive(JOB_ID = $Job_ID,",
				"          CREATED_DATE = currentTimestamp(),",
				"          PERSONNEL_SK = RowNum+PERSONNEL_SK) ~> AddingAuditColumns",
				"AddingAuditColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          NCONST,",
				"          PRIMARY_NAME = PRIMARYNAME,",
				"          BIRTH_YEAR = BIRTHYEAR,",
				"          DEATH_YEAR = DEATHYEAR,",
				"          JOB_ID,",
				"          CREATED_DATE,",
				"          PERSONNEL_SK",
				"     )) ~> sinkDimPersonnel"
			]
		}
	}
}